{"section":"Team Development","group":"Source Control","path":"team-development/source-control","levels":[{"level":0,"description":"GUI, command line basics (add, push, pull, fetch), reading from github, writing to github (PRs, forks)","goals":[],"skills":["clone an existing git repository","stage files using `git add --patch`","create a commit","push up to a remote repository","create a new Github repository","initialize a new git repository","setup a github repository as a remote","pull down from a remote repository","tell git to ignore files with `.gitignore`","create a Github pull request","understands remote, fetch, pull, push, branch, log","understands branch and branching"]},{"level":1,"description":"git command line (reset/revert), merge conflict resolution","goals":[83],"skills":["understands SHA","understands REF","undo the previous commit using `git reset`","revert a commit using `git revert`","resolve basic merge conflicts","understands the tree / directed graph","understands fast-forward"]},{"level":2,"description":"git command line (rebase, cherry-pick), has worked in an org with branching and PRs","goals":[],"skills":["rebase a branch","cherry-pick a commit","use `git rebase --interactive`","resolve more complex merge conflicts","understands stash","understands add, reset, rm, commit, cherry-pick","understands git add --patch"]},{"level":3,"description":"git command depth (bisect, interactive rebase, submodules, multiple remotes, git push -f), commit hooks, Integration with other services (CI, Slack)","goals":[],"skills":[]}]}