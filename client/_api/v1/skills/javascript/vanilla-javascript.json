{"section":"JavaScript","group":"Vanilla JavaScript","path":"javascript/vanilla-javascript","levels":[{"level":0,"description":"The Basics. Variables, simple data types, flow control, functions, encapsulation, recursion","goals":[174,176],"skills":["Basic understanding of variables","Basic string and array manipulation","Understand 'truthy' and 'falsey'","Understand literal notation","Understand dot bracket notation","Basic understanding of JSON","Operator precedence","Flow control: iteration, if, switch, while, for loops","Functions: arguments, arity, return, scope","Static v.s. non-static functions","Encapsulating functions","Understand equality and comparison","Understand and use Dates and Times","Understand and use Math object","Error handling: try / throw / catch","Understand and use Recursion"]},{"level":1,"description":"Object Oriented Patterns. Scopes, closures, prototyps, 'this', inheritance","goals":[165],"skills":["JavaScriptâ€™s variable scoping, including lexical scopes and dynamics scopes.","Closures","Prototypes","The difference between Classic Inheritance and Prototypical Inheritance","The difference between private variable, public variable and static variable? How we achieve this in JS?","How to add/remove properties to object in run time","How to achieve inheritance","How to extend built-in objects","What is Object in JavaScript","What is the Prototype object in JavaScript and how it is used","What is 'this'? What is its value?","Explain why 'self' is needed instead of 'this'.","Closures and why are they so useful","Explain how to write class methods vs. instance methods.","Explain the difference between == and ===?","Understand and use Constructors and Factories","Understand scopes and namespaces","Understand == vs. === "]},{"level":2,"description":"Functional Patterns","goals":[150],"skills":[]},{"level":3,"description":"How the event loop works, how browser APIs and webworkers work, how browser rendering happens, knowledge of V8 JIT compilation","goals":[],"skills":[]}]}