---
section: Frontend
group: CSS and HTML
levels:
- level: 0
  description: >-
    CSS & HTML fundamentals. Basic selectors, properties, formatting, dev
    tools.
  goals: []
  skills:
  - understands the tree structure
  - 'Formatting: text / font / type'
  - 'css units: px, em'
  - relative vs absolute path URLs
  - >-
    positioning with: display: inline, display: block, display: inline-block,
    position: relative
  - explain how HTML is a tree
  - >-
    properly use these node types `html, head, body, script, link, title,
    div, span, a, button, p, ul, li, table, tbody, tr, th, td`
  - include assets like stylesheets, javascripts and images
  - explain the box model
  - explain the difference between inline, block and inline-block
  - explain when to use an id vs. a class name
  - >-
    read, understand and author these kinds of CSS selectors, nodeName, classname,
    space, comma
  - >-
    understands these CSS selectors `.signup-form`, `.signup-form .first-name-field`,
    `table.stripped-table`, `a.button:hover`, `.IconButton > button`, `table
    > tr:nth-child(odd)`
  - >-
    is familiar with and can use these pseudo selectors `:hover,:focus,:active,:visited,:disabled,:checked,:nth-child`
  - >-
    is familiar with and can use these CSS properties: `border, margin, padding,
    height, width, background, display, color, font-size, font-weight, flex-direction,
    flex-wrap, justify-content, align-items, align-content, flex-grow`
  - select an element in the DOM tree in Chrome Developer Tools
  - should be able to implement a two column layout
  - is familiar with the concept of reset stylesheet and why to use one
  - knows difference between inline and .css files
  - prevent the default behavior of a DOM event
  - >-
    create a link to a specific scroll position on the page using an anchor
    tag
- level: 1
  description: More selectors, units, validations
  goals:
  - 150
  - 120
  - 83
  skills:
  - css selector weight
  - 'css units: vh, vw, %'
  - 'forms: inputs/validations'
  - 'css selectors parts: *, >, +, [attr=''x'']'
  - 'pseudo selectors: :before, :after, :nth-child'
  - 'position with: position: fixed, flexbox, float'
  - classname patterns like BEM
  - vendor prefixes
  - should be able to use a web font
  - should be able to use an Icon font
  - >-
    track asset loading requests in the network tab of Chrome Developer Tools
  - explain event bubbling
  - explain event delegation
  - >-
    give an example of when it's appropriate to apply styles to a node like
    `button { … }` as opposed to using a unique classname `.button { … }`
  - should be able to implement a simple modal
  - should be able to implement a fixed navbar
  - should be able to implement a `sticky footer`
  - should be able to implement a button that depresses when clicked
  - should be able to implement a dropdown menu
- level: 2
  description: Transitions, animations and data attributes
  goals: []
  skills:
  - 'css selectors parts: ~=, |=, ^=, $='
  - 'pseudo selectors: :not'
  - "@media queries"
  - transitions
  - animations
  - data attributes
- level: 3
  description: CSS4, render engines, cross-browser quirks
  goals: []
  skills:
  - CSS4 features
  - Can contribute to pre-processor OSS or CSS4 spec
  - in-depth off-hand knowledge of cross-browser quirks
  - browser render engines (stacking context)
