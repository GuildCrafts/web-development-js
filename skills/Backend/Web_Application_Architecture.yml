---
section: Backend
group: Web Application Architecture
levels:
- level: 0
  description: >-
    Basic web architecture. HTTP servers, static assets, templates, cookies,
    HTTP status, ports
  goals:
  - 150
  skills:
  - Identify, explain, and apply logging in a web app
  - Identify, explain, and write a server file for a web app
  - Identify, explain, and apply routers in a web app
  - Identify, explain, and apply views in a web app
  - Build a web app that serves multiple static view files
  - explain the requests & response life cycle
  - >-
    articulate the difference between a standard HTTP request and an AJAX
    / XHR request
  - articulate the difference between 'front end' and 'back end'
  - >-
    draw a diagram showing how data/messages flow from the browser, to the
    server and back again with detail about the contents sent within those
    messages
  - list the most commonly used HTTP headers
  - articulate the difference between a `get` and a `post` request
  - explain what a port is
  - roughly explain how a web browser talks to a web server
  - explain how Authentication via HTTP Cookies works
  - Explain a common file structure for a web app
  - Build a web app that renders views with dynamic data
  - setup an express app with signup, login and logout functionality
  - render `HTML` from a `pug` template in response to a request
  - render `JSON` in response to a request
  - Identify, explain, and apply authorization in a web app
  - Identify, explain, and apply authentication in a web app
  - Identify, explain, and apply database integration in a web app
  - Identify, explain, and apply redirects in a web app
  - Build a web app with user authentication
  - Build a web app that renders HTML on the client
- level: 1
  description: Authorization, asset managers, sockets, REST, API
  goals: []
  skills:
  - Identify, explain, and apply controllers in a web app
  - Identify, explain, and apply server side rendering in a web app
  - Identify, explain, and apply view templates in a web app
  - Identify, explain, and apply environment variables for a web app
  - Build a web app with user authorization
  - Understand and use sockets
  - Understand and use asset packaging like webpack or browserify
  - Identify, explain, and apply the RESTful routing pattern
  - Implement the routes for a RESTful resource
  - Implement the routes for a nested RESTful resource
  - Design and Implement RESTful APIs
- level: 2
  description: MVC, client side rendering and error handling
  goals: []
  skills:
  - >-
    Identify, explain, and apply the Model-View-Controller pattern in a web
    app
  - Identify, explain, and apply models in a web app
  - Build a web app that implements the MVC pattern
  - Build a web app that manages persistent resources
  - Identify, explain, and apply client side rendering in a web app
  - Identify, explain, and apply error handling in a web app
  - Build a web app with graceful error handling
- level: 3
  description: >-
    Helpers, OAuth, caching, security, config files, HTTPS, Service-Oriented
    Architecture
  goals: []
  skills:
  - Identify, explain, and apply helpers in a web app
  - Use OAuth to authenticate with a third-party service
  - Identify and explain caching in a web app
  - Identify and explain security in a web app
  - Identify and explain environment config files in a web app
  - Build a web app that uses HTTPS for sensitive material
  - Analyze the security of a web app
  - Build a web app that uses caching
  - Build a web app that uses environment config variables
  - Identify, design, and implement Service-Oriented architecture
