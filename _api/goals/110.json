{
  "authors": [
    "deonna"
  ],
  "team_size": 2,
  "goal_id": 110,
  "title": "Functional Programming: Concepts and Exercises",
  "created_at": "2016-11-28T19:52:44Z",
  "labels": [
    "foundational"
  ],
  "published": true,
  "level": "1",
  "redirect_from": "/goals/110",
  "url": "http://jsdev.learnersguild.org/goals/110-Functional_Programming-Concepts_and_Exercises.html",
  "base_xp": 100,
  "bonus_xp": 15.0,
  "dynamic": false,
  "content": "# Functional Programming: Concepts and Exercises\n\n## Challenge Rating\n\nThis goal will likely be within your ZPD if you...\n\n- Can write programs and tests using Node.js and npm\n- Can use callbacks in JavaScript functions\n- Know what the terms \"parameter\", \"argument\", \"data type\", \"function call\", \"return value\" mean\n- Are familiar with the concept of programming paradigms\n- Are familiar with the difference between function definition and invocation\n- Are interested in functional programming concepts\n- Are interested in common functional patterns like composition, currying, and writing pure functions\n\n## Description\n\nThis goal provides an introduction to functional programming concepts using JavaScript.\n\nYou'll practice these concepts with a series of reinforcement exercises from the [Mostly Adequate Guide to Functional Programming][mostly-adequate-guide] and a handful of automated challenges on [CodeWars][codewars-chals].\n\nFork the [fp-exercises][fp-exercises] repo, and use the fork as your artifact.\n\nBefore getting going on the reading and exercises, it is **highly recommended** that you use some of the [resources](#resources) to familiarize yourself with basic functional programming concepts.\n\nThis repo has the exercises and tests for the Mostly Adequate Guide already there so you can get started right away. When you work on the CodeWars katas, just copy your solution into the `code-wars` folder of the repo so that your code can be reviewed and so that you can reference it in the future.\n\nIf this goal is too advanced for you, a good pre-requisite goal is @Jusdev89's [Common JS Utility Functions - Lodash](./37-Common_JS_Utility_Functions-Lodash.md).\n\n## Context\n\nFunctional programming patterns are becoming increasingly popular in the web development community. Using these patterns results in code that is more adaptable and flexible, less buggy, and more scalable.\n\n**Warning: you will find _math_ inside!** The concepts behind functional programming derive from mathematics, and so as you begin to develop your grasp of them you will likely encounter \"math language\". The Mostly Adequate Guide in particular will use some math terms. If you're not super math-y, never fear. The other resources will help you to understand functional programming without having to know too much about math.\n\nWe've gotten feedback that the article [\"So You Want to Be a Functional Programmer\"][so-you-want] and the funfunfunction video series [\"Functional programming in JavaScript\"][funfunfunc] are particularly useful for getting oriented.\n\nAlso, the article [The Two Pillars of JavaScript — Pt 2: Functional Programming](https://medium.com/javascript-scene/the-two-pillars-of-javascript-pt-2-functional-programming-a63aa53a41a4#.p9gfmzfel) goes into many of the reasons why you might want to consider learning how to write JavaScript as a functional programmer would.\n\n## Specifications\n\n#### General\n\n- [ ] Code uses a linter and there are no linting errors.\n- [ ] Variables, functions, files, etc. have appropriate and meaningful names.\n- [ ] The artifact produced is properly licensed, preferably with the [MIT license][mit-license].\n\n#### Mostly Adequate Guide\n\nRead the [Mostly Adequate Guide to Functional Programming][mostly-adequate-guide] through Chapter 8: Tupperware, complete exercises from the Mostly Adequate Guide, and include them in your artifact repo.\n\n- [ ] [Chapter 4 Exercises](https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch4.html#exercises) are completed\n- [ ] All tests are passing for Chapter 4 exercises\n- [ ] [Chapter 5 Exercises](https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch5.html#exercises) are completed\n- [ ] All tests are passing for Chapter 5 exercises\n- [ ] [Chapter 8 Exercises](https://drboolean.gitbooks.io/mostly-adequate-guide/content/ch8.html#exercises) are completed\n- [ ] All tests are passing for Chapter 8 exercises\n\n#### Codewars\n\n- [ ] [5 Functional Programming katas][codewars-chals] from CodeWars are completed and added to the `code-wars` folder of your artifact repo\n\nA just a heads up on CodeWars: you're required to answer a couple of super basic JS questions to sign up for CodeWars, and you need to be signed up for the links to work.\n\n### Stretch\n\n- [ ] Additional 5 katas from [CodeWars][codewars-chals] are completed and added to your artifact repo\n- [ ] Refactor a previous project to use functional programming patterns (strongly recommended to review the Mostly Adequate Guide before starting)\n- [ ] Add links to your refactoring PRs in a `refactoring.md` file in your artifact repo\n\n## Resources\n\n- [Mostly Adequate Guide][mostly-adequate-guide] book\n- [CodeWars functional programming in JS katas][codewars-chals]\n- Video: [Intro to Functional JavaScript (8m)](https://scrimba.com/Lokeh/cast-1180)\n- [So You Want to Be a Functional Programmer][so-you-want]\n- funfunfunction's YouTube series: [Functional programming in JavaScript][funfunfunc]\n\nArticles, guides, and courses\n\n- [Functors, Applicatives, And Monads In Pictures](http://adit.io/posts/2013-04-17-functors,_applicatives,_and_monads_in_pictures.html)\n- [Category Theory for Programmers](https://bartoszmilewski.com/2014/10/28/category-theory-for-programmers-the-preface/) (advanced)\n- [Professor Frisby Introduces Composable Functional JavaScript](https://egghead.io/courses/professor-frisby-introduces-composable-functional-javascript)\n- Frontend Masters: [Hardcore Functional Programming in JavaScript (6h)](https://frontendmasters.com/courses/functional-javascript/) #fp #js\n- Frontend Masters: [Functional-Lite JavaScript (3h)](https://frontendmasters.com/courses/functional-js-lite/) #fp #js\n- Frontend Masters: [Four Semesters of Computer Science in 5 Hours (5h)](https://frontendmasters.com/courses/computer-science/) - specifically, the Section \"Functional Programming 101\" #fp #js\n- [Eloquent JavaScript Chapter 6: Functional Programming](http://eloquentjavascript.net/1st_edition/chapter6.html)\n\nTools and libraries\n\n- [Ramda](http://ramdajs.com/docs/) - similar to lodash, but for functional programming\n- [Ramda REPL](http://ramdajs.com/repl/) (read-evaluate-print-loop)\n\n[mit-license]: https://opensource.org/licenses/MIT\n[fp-exercises]: https://github.com/GuildCrafts/functional-programming-exercises\n[mostly-adequate-guide]: https://drboolean.gitbooks.io/mostly-adequate-guide/content/\n[codewars-chals]: https://www.codewars.com/kata/search/javascript?q=&tags=Functional+Programming&beta=false\n\n[so-you-want]: https://medium.com/@cscalfani/so-you-want-to-be-a-functional-programmer-part-1-1f15e387e536\n[funfunfunc]: https://www.youtube.com/playlist?list=PL0zVEGEvSaeEd9hlmCXrk5yUyqUag-n84"
}