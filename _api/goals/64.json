{
  "authors": [
    "rachel-ftw",
    "mantinone"
  ],
  "team_size": 2,
  "goal_id": 64,
  "title": "To Do List App",
  "created_at": "2016-08-06T00:52:33Z",
  "labels": [
    "practice"
  ],
  "published": true,
  "level": "1",
  "redirect_from": "/goals/64",
  "url": "http://jsdev.learnersguild.org/goals/64-To_Do_List_App.html",
  "content": "# To Do List\n\n## Challenge Rating\n\nThis goal will likely be within your ZPD if you...\n\n- Can build basic websites with HTML & CSS\n- Can add behavior to a website with JavaScript\n- Have a basic familiarity with SQL\n- Are familiar with Object Oriented programming in JavaScript\n- Are familiar with JavaScript promises\n- Are interested in building full-stack web applications\n- Are interested in how user stories get translated into software design and implementation choices\n\n## Description\n\nIn this goal, you will build a simple to-do list app, where users can store their tasks in a database, see their tasks, and mark them complete.\n\nThis simple application is a great introduction to learning how the browser communicates with a server, and how the server communicates with a database.\n\nYou'll be working with the [Express][npm-express] library for Node.js to help you scaffold and build the server-side logic of your application.\n\nMost learners have used [Postgres][postgres] for their database and  [pg-promise][npm-pg-promise] for connecting to a Postgres database from a Node.js app.\n\nIf you are already experienced with this project, you may want to choose a different database such as MongoDB.\n\nYou may design your own UI, but it's probably better to copy someone else's design. After all, there _are_ a few other to-do list apps out there ;). Here's one example using Google's [Material Design][material-design] that you could mimic:\n\n<img width=800 src=\"https://cloud.githubusercontent.com/assets/709100/23414837/3f8c7046-fdab-11e6-8631-8dfb80662e24.png\">\n\n## Context\n\nOne of the main skills we seek to learn here at Learners Guild is the creation of full-stack web applications. This project is an excellent opportunity to see how all your various foundational skills will come together into a complete, functioning website.\n\nWhen working on this goal, you'll encounter questions like:\n\n- How could the application logic be structured satisfy this user story?\n- How should the code be broken up and organized, and where should the different parts live?\n- When and where will users run into errors, and how should the app respond to them?\n- What should be tested and how?\n- What is the UI needed to satisfy this user story?\n\n## Specifications\n\n### User Stories\n\n- [ ] Users can create to do list items.\n- [ ] Users can delete unwanted to do list items.\n- [ ] Users can check items off as completed.\n- [ ] Users can rearrange to do list items.\n- [ ] Users can edit the text on existing to do list items.\n- [ ] When an error occurs, the user is notified with modal message.\\*\n\n\\* A quick and easy way to do this is to use the `alert()` function.\n\n### Additional\n\n- [ ] Backend uses Node.js and [Express][npm-express].\n- [ ] App persists to do list items in a database.\n- [ ] Code uses a linter and there are no linting errors.\n- [ ] There are thorough tests for all functionality involved in interacting with the database.\n- [ ] All tests are passing.\n- [ ] Repository includes a README file with basic installation and setup.\n- [ ] All dependencies are properly declared in `package.json`.\n- [ ] All major features are added via pull requests with a clear description and concise commit messages.\n- [ ] Every pull request has been reviewed by at least one other person.\n- [ ] The artifact produced is properly licensed, preferably with the [MIT license][mit-license].\n\n### Stretch\n\n- [ ] App is deployed on Heroku.\n- [ ] Users can create multiple to-do lists.\n- [ ] Users have their own account and can sign up and log in/out.\n- [ ] App is written with ES6 and compiled using [babel][npm-babel].\n\n[npm-express]: https://www.npmjs.com/package/express\n[npm-babel]: https://www.npmjs.com/package/babel\n[npm-pg-promise]: https://www.npmjs.com/package/pg-promise\n[postgres]: https://www.postgresql.org/\n[material-design]: https://material.io/\n[mit-license]: https://opensource.org/licenses/MIT"
}