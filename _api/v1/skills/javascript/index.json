{"section":"JavaScript","groups":[{"group":"Debugging JavaScript","path":"javascript/debugging-javascript","levels":[{"level":0,"description":"Simple backtracing, logging, and error throwing"},{"level":1,"description":"Backtraces, setping up and down, break points"},{"level":2,"description":"Conditional BPs, watch statements, lexical scope, stitched backtraces"},{"level":3,"description":"CORE dump files, V8 level errors"}]},{"group":"ES6","path":"javascript/es6","levels":[{"level":0,"description":""},{"level":1,"description":"ES6 transpilation to ES5, memorized browser/node compatability, more in-depth quirks (like the difference between arrow functions and named functions, how .prototype might trip you up)"},{"level":2,"description":"Control-flow: generators, async/await, knows how `class` transpiles to ES5 and when to use it vs functions, know popular .babelrc configs and when to use babel-register babel-node and babel-polyfill, aware of browser/node compatability, knowledge of upcoming features"},{"level":3,"description":"Contributes to babel or a babel plugin, contributes to discussions on the future of ES6"}]},{"group":"JavaScript Tools","path":"javascript/javascript-tools","levels":[{"level":0,"description":""},{"level":1,"description":"Console, elements tabs of devtools, sparsely configured editor"},{"level":2,"description":"ternjs, eslint, nyc, well-configured editor, can use node in debug mode, network and sources tabs in devtools, devtools plugins"},{"level":3,"description":"devtools profiling, device simulation, and network throttling; IRHydra2"}]},{"group":"Performance","path":"javascript/performance","levels":[{"level":0,"description":"knows what garbage collection is, knows _when_ to optimize"},{"level":1,"description":"inspect heap to isolate memory leaks, CPU profile to find cpu-intensive functions"},{"level":2,"description":"improve node performance by examining generated assembly, has written transpiler or transpiling plugins\n"},{"level":3,"description":"Has optimized V8 performance by analyzing generated assembly (IRHydra2)"}]},{"group":"Vanilla JavaScript","path":"javascript/vanilla-javascript","levels":[{"level":0,"description":"The Basics. Variables, simple data types, flow control, functions, encapsulation, recursion"},{"level":1,"description":"Object Oriented Patterns. Scopes, closures, prototyps, 'this', inheritance"},{"level":2,"description":"Functional Patterns"},{"level":3,"description":"How the event loop works, how browser APIs and webworkers work, how browser rendering happens, knowledge of V8 JIT compilation"}]}]}