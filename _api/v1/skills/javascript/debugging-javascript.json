{"section":"Javascript","group":"Debugging Javascript","levels":[{"level":0,"description":"Simple backtracing, logging, and error throwing","goals":[],"skills":["reading backtraces","logging relevant events and values","throwing errors for edge cases"]},{"level":1,"description":"Backtraces, setping up and down, break points","goals":[],"skills":["logging backtraces with `console.trace`","use debugger to step up and down the call stack","use debugger to evaling code at a specific point the program","use debugger to set break points"]},{"level":2,"description":"Conditional BPs, watch statements, lexical scope, stitched backtraces","goals":[],"skills":["set conditional break points","set watch statements","example the lexical scope inheritence tree","reading stitched backtraces"]},{"level":3,"description":"CORE dump files, V8 level errors","goals":[],"skills":["Examining CORE dump files","Debugging V8 level errors"]}]}